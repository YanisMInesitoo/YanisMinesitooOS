xdxdxd.txt - Instrucciones para compilar y probar tu propio sistema operativo Linux avanzado (x86_64)

1. Instala WSL y Ubuntu en Windows:
   - Abre PowerShell como administrador y ejecuta:
     wsl --install
   - Reinicia tu PC si es necesario y abre Ubuntu desde el menú de inicio.

2. Instala las herramientas necesarias en Ubuntu (WSL):
   sudo apt update && sudo apt upgrade -y
   sudo apt install build-essential libncurses-dev bison flex libssl-dev libelf-dev grub-pc-bin grub-efi-amd64-bin qemu-system-x86 wget -y

3. Descarga los binarios estáticos de utilidades y colócalos en la raíz del proyecto:
   - busybox: https://busybox.net/downloads/binaries/1.36.1-i686-uclibc/busybox
   - nano: https://github.com/andrewchambers/nano-static-builds/releases/download/v6.4/nano-x86_64
   - wget: https://eternallybored.org/misc/wget/
   - curl: https://github.com/moparisthebest/static-curl/releases/latest/download/curl-amd64
   - tar: https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/tar
   - gzip: https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/gzip
   - dpkg: (compilar estático o buscar binario compatible)
   Renombra los binarios a: nano, wget, curl, tar, gzip, dpkg
   chmod +x nano wget curl tar gzip dpkg busybox

4. Copia todos los archivos del proyecto a tu carpeta de usuario en Ubuntu (WSL):
   wsl mkdir -p ~/yanisos
   wsl cp /mnt/c/Users/Yanis/Documents/YanisMinesitoo\ OS/* ~/yanisos/

5. Da permisos de ejecución a los scripts:
   cd ~/yanisos
   chmod +x build.sh make_initramfs.sh init

6. Ejecuta el script para compilar el kernel y crear la ISO:
   ./build.sh

7. Si todo sale bien, verás el mensaje:
   ¡ISO creada exitosamente! Archivo: /ruta/a/build/linux-os.iso

8. Para probar la ISO en QEMU ejecuta:
   cd build
   qemu-system-x86_64 -cdrom linux-os.iso

---

Al arrancar, verás un menú con utilidades (shell, nano, wget, curl, tar, gzip, dpkg, etc). Puedes instalar .deb si dpkg está disponible y compatible.

¡Disfruta tu YanisMinesitoo OS supercargado!
